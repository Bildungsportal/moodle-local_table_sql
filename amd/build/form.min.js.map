{"version":3,"file":"form.min.js","sources":["../src/form.js"],"sourcesContent":["/* eslint-disable */\nimport $ from 'jquery';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport Notification from 'core/notification';\n\nvar debug = false;\n\n\nasync function xhrRequest(xhrdata) {\n  try {\n    return await $.post(document.location.href, xhrdata);\n  } catch (e) {\n    var error = '';\n\n    // if the error is a html output get the error from the html code\n    if (e.responseText && typeof e.responseText == 'string' && e.responseText[0] === '<') {\n      error = $(e.responseText).find('.errormessage').text();\n    }\n\n    if (!error) {\n      error = 'Unknown error!';\n    }\n\n    Notification.exception(new Error(error));\n\n    throw e;\n  }\n}\n\n/**\n * load the form into a modal by use of ajax.\n * @param {DOMobject} sender\n * @param {object} modaldata\n */\nexport async function loadModal(sender, modaldata = null) {\n  const $pane = $(sender).closest('.table-sql-modal');\n  modaldata = modaldata || $pane.data('modaldata');\n\n  const xhrdata = {\n    ...modaldata.xhrdata,\n    is_xhr: 1,\n    table_sql_action: 'form_show'\n  };\n\n  if (debug) {\n    console.log('Loading modal for params', xhrdata);\n  }\n\n  var response = await xhrRequest(xhrdata);\n\n  ModalFactory.create({\n    // body gets set in updateModal()\n    body: '', // response.form,\n    large: true,\n    removeOnClose: true,\n    title: response.modal_title,\n    type: ModalFactory.types.SAVE_CANCEL,\n  }).then(function (modal) {\n    updateModal(modaldata, modal, response, $pane);\n    modal.show();\n    modal.getRoot().on(ModalEvents.save, (e) => {\n      e.preventDefault();\n      send(modaldata, modal, $pane);\n    });\n\n    // TODO: on cancel remove modal?!?\n  });\n}\n\n/**\n * Update modal if a form was loaded into it.\n * @param {object} modaldata\n * @param {object} modal\n * @param {object} response\n * @param {DOMobject} pane\n */\nfunction updateModal(modaldata, modal, response, $pane) {\n  $(modal.getRoot()).find('.modal-body').html(response.form);\n\n  // set default values\n  for (const [key, value] of Object.entries(modaldata.values || [])) {\n    $(modal.getRoot()).find('input[type=\"text\"], select, textarea').filter('[name=\\\"' + key + '\\\"], select[name=\\\"' + key + '\\\"]').val(value);\n    $(modal.getRoot()).find('radio[name=\\\"' + key + '\\\"][value=\\\"' + value + '\\\"').prop('checked', true);\n  }\n\n  let showfields = modaldata.showfields;\n\n  let $form = $(modal.getRoot()).find('form');\n\n  // only show the field of the current column\n  // if (showfields && showfields.length == 0) {\n  //   // Find the closest element and filter for the class starting with 'local_table_sql-column-'\n  //   var closestNode = $pane.closest('[class*=\"local_table_sql-column-\"]');\n  //\n  //   // Extract the column name by matching the class pattern\n  //   var columnName = closestNode.attr('class')?.match(/local_table_sql-column-(\\S+)/)?.[1];\n  //\n  //   if (columnName) {\n  //     if ($form.find('input[name=\"' + columnName + '\"]').length) {\n  //       // column exists, hide all others\n  //       showfields = [columnName];\n  //     }\n  //   }\n  // }\n\n  if (showfields && showfields.length > 0) {\n    $form.find('[name]').each(function () {\n      let name = $(this).attr('name');\n      if (showfields.indexOf(name) === -1) {\n        $(this).closest('.row')\n          .not('.has-danger') // bei einem Fehler dieses Feld nicht ausblenden\n          .addClass('hidden');\n      }\n    });\n  }\n\n  // remove the button row\n  $form.find('#id_submitbutton').closest('.row').remove();\n  // add own submit, so the form can get submitted\n  $form.append('<input type=\"submit\"  class=\"hidden\"/>');\n  $form.submit(function (e) {\n    // prevent submit post\n    e.preventDefault();\n\n    // trigger modal event\n    modal.getRoot().trigger(ModalEvents.save);\n  });\n\n  // Run any required javascript.\n  if (response.pageendcode) {\n    let script = $('<script>').data('added', Date.now()).html(response.pageendcode);\n    if (debug) {\n      console.log('appending page end code', script);\n    }\n    $('body').append(script);\n  }\n}\n\n/**\n * Actually send the data. Depending on the result. update the form or close the modal and update the cell.\n * @param {object} modaldata\n * @param {object} modal\n * @param {DOMobject} $pane\n *\n *\n */\nasync function send(modaldata, modal, $pane) {\n  let form = $(modal.getRoot()).find('form');\n\n  const xhrdata = {\n    ...modaldata.xhrdata,\n    ...$(form).serializeArray().reduce(function (obj, item) {\n      // for arrays (multiselect etc.) use an array\n      if (item.name.match(/\\[\\]$/)) {\n        if (!obj[item.name]) {\n          obj[item.name] = [];\n        }\n        obj[item.name].push(item.value);\n      } else {\n        obj[item.name] = item.value;\n      }\n\n      return obj;\n    }, {}),\n    is_xhr: 1,\n    table_sql_action: 'form_save'\n  };\n  if (debug) {\n    console.log('Store row', xhrdata);\n  }\n\n  var response = await xhrRequest(xhrdata);\n  if (debug) {\n    console.log('Response', response);\n  }\n\n  if (response.form) {\n    // there was an error, show form again\n    updateModal(modaldata, modal, response, $pane);\n    return;\n  }\n\n  // remove the modal content (the form), so it doesn't trigger any \"do you want to save?\" alerts\n  $(modal.getRoot()).find('.modal-body').html('');\n\n  if ($pane.length && response.colreplace) {\n    // replacing single value in table\n    $pane.replaceWith($(response.colreplace));\n  } else {\n    // reload the table\n    window.table_sql_reload();\n  }\n\n  modal.hide();\n}\n\n"],"names":["sender","modaldata","$pane","closest","data","xhrdata","is_xhr","table_sql_action","response","xhrRequest","create","body","large","removeOnClose","title","modal_title","type","ModalFactory","types","SAVE_CANCEL","then","modal","updateModal","show","getRoot","on","ModalEvents","save","e","preventDefault","send","$","post","document","location","href","error","responseText","find","text","exception","Error","html","form","key","value","Object","entries","values","filter","val","prop","showfields","$form","length","each","name","this","attr","indexOf","not","addClass","remove","append","submit","trigger","pageendcode","script","Date","now","serializeArray","reduce","obj","item","match","push","colreplace","replaceWith","window","table_sql_reload","hide"],"mappings":"mWAmCgCA,YAAQC,iEAAY,WAC5CC,OAAQ,mBAAEF,QAAQG,QAAQ,oBAChCF,UAAYA,WAAaC,MAAME,KAAK,mBAE9BC,QAAU,IACXJ,UAAUI,QACbC,OAAQ,EACRC,iBAAkB,aApCV,UA2CNC,eAAiBC,WAAWJ,gCAEnBK,OAAO,CAElBC,KAAM,GACNC,OAAO,EACPC,eAAe,EACfC,MAAON,SAASO,YAChBC,KAAMC,uBAAaC,MAAMC,cACxBC,MAAK,SAAUC,OAChBC,YAAYrB,UAAWoB,MAAOb,SAAUN,OACxCmB,MAAME,OACNF,MAAMG,UAAUC,GAAGC,sBAAYC,MAAOC,IACpCA,EAAEC,iBACFC,KAAK7B,UAAWoB,MAAOnB,mOAtDdO,WAAWJ,0BAET0B,gBAAEC,KAAKC,SAASC,SAASC,KAAM9B,SAC5C,MAAOuB,OACHQ,MAAQ,SAGRR,EAAES,cAAyC,iBAAlBT,EAAES,cAAkD,MAAtBT,EAAES,aAAa,KACxED,OAAQ,mBAAER,EAAES,cAAcC,KAAK,iBAAiBC,QAG7CH,QACHA,MAAQ,wCAGGI,UAAU,IAAIC,MAAML,QAE3BR,YAmDDN,YAAYrB,UAAWoB,MAAOb,SAAUN,2BAC7CmB,MAAMG,WAAWc,KAAK,eAAeI,KAAKlC,SAASmC,UAGhD,MAAOC,IAAKC,SAAUC,OAAOC,QAAQ9C,UAAU+C,QAAU,wBAC1D3B,MAAMG,WAAWc,KAAK,wCAAwCW,OAAO,UAAaL,IAAM,oBAAwBA,IAAM,MAAOM,IAAIL,2BACjIxB,MAAMG,WAAWc,KAAK,eAAkBM,IAAM,aAAiBC,MAAQ,KAAMM,KAAK,WAAW,OAG7FC,WAAanD,UAAUmD,WAEvBC,OAAQ,mBAAEhC,MAAMG,WAAWc,KAAK,WAkBhCc,YAAcA,WAAWE,OAAS,GACpCD,MAAMf,KAAK,UAAUiB,MAAK,eACpBC,MAAO,mBAAEC,MAAMC,KAAK,SACU,IAA9BN,WAAWO,QAAQH,2BACnBC,MAAMtD,QAAQ,QACbyD,IAAI,eACJC,SAAS,aAMlBR,MAAMf,KAAK,oBAAoBnC,QAAQ,QAAQ2D,SAE/CT,MAAMU,OAAO,0CACbV,MAAMW,QAAO,SAAUpC,GAErBA,EAAEC,iBAGFR,MAAMG,UAAUyC,QAAQvC,sBAAYC,SAIlCnB,SAAS0D,YAAa,KACpBC,QAAS,mBAAE,YAAY/D,KAAK,QAASgE,KAAKC,OAAO3B,KAAKlC,SAAS0D,aA7H3D,0BAiIN,QAAQH,OAAOI,wBAYNrC,KAAK7B,UAAWoB,MAAOnB,WAChCyC,MAAO,mBAAEtB,MAAMG,WAAWc,KAAK,cAE7BjC,QAAU,IACXJ,UAAUI,YACV,mBAAEsC,MAAM2B,iBAAiBC,QAAO,SAAUC,IAAKC,aAE5CA,KAAKjB,KAAKkB,MAAM,UACbF,IAAIC,KAAKjB,QACZgB,IAAIC,KAAKjB,MAAQ,IAEnBgB,IAAIC,KAAKjB,MAAMmB,KAAKF,KAAK5B,QAEzB2B,IAAIC,KAAKjB,MAAQiB,KAAK5B,MAGjB2B,MACN,IACHlE,OAAQ,EACRC,iBAAkB,iBAMhBC,eAAiBC,WAAWJ,SAK5BG,SAASmC,KAEXrB,YAAYrB,UAAWoB,MAAOb,+BAK9Ba,MAAMG,WAAWc,KAAK,eAAeI,KAAK,IAExCxC,MAAMoD,QAAU9C,SAASoE,WAE3B1E,MAAM2E,aAAY,mBAAErE,SAASoE,aAG7BE,OAAOC,mBAGT1D,MAAM2D"}